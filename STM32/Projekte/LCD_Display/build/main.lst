ARM GAS  /tmp/cck5xq8W.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB72:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/cck5xq8W.s 			page 2


  34:Core/Src/main.c **** #define DCX_low()                                                              \
  35:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_RESET) // command
  36:Core/Src/main.c **** #define DCX_high()                                                             \
  37:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET) // data/parameter
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** #define SLEEP_OUT 0x11
  40:Core/Src/main.c **** #define DISPLAY_ON 0x29
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** // select at low level
  43:Core/Src/main.c **** #define CSX_low() HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET)
  44:Core/Src/main.c **** #define CSX_high() HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET)
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** // reset at low level
  47:Core/Src/main.c **** #define RESX_low 0 // GPIO ausgänge müssen das sein
  48:Core/Src/main.c **** #define RESX_high 1
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** // pixel RGB565
  51:Core/Src/main.c **** #define GREEN 0x07E0 // 0b0000011111100000
  52:Core/Src/main.c **** #define RED 0xF100   // 0b1111100000000000
  53:Core/Src/main.c **** #define BLUE 0x001F  // 0b0000000000011111
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** #define COLMOD_CMD 0x3A
  56:Core/Src/main.c **** #define COLMOD_16 0x55 // 16bits pro pixel
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** #define RAMWR_CMD 0x2C // instruction before pixel data is sent
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** #define MADCTL_CMD 0x36
  61:Core/Src/main.c **** #define MADCTL_PARAM 0x00
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** #define RASET_CMD 0x2B
  64:Core/Src/main.c **** #define CASET_CMD 0x2A
  65:Core/Src/main.c **** #define RASET_PARAM_START 0x0000 // Startzeile
  66:Core/Src/main.c **** #define RASET_PARAM_END 0x0083   // Endzeile = 131
  67:Core/Src/main.c **** #define CASET_PARAM_START 0x0000 // Startspalte
  68:Core/Src/main.c **** #define CASET_PARAM_END 0x00A1   // Endspalte = 161
  69:Core/Src/main.c **** /* USER CODE END PD */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  72:Core/Src/main.c **** /* USER CODE BEGIN PM */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* USER CODE END PM */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  77:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* USER CODE BEGIN PV */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* USER CODE END PV */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  84:Core/Src/main.c **** void SystemClock_Config(void);
  85:Core/Src/main.c **** static void MX_GPIO_Init(void);
  86:Core/Src/main.c **** static void MX_SPI1_Init(void);
  87:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /* USER CODE END PFP */
  90:Core/Src/main.c **** 
ARM GAS  /tmp/cck5xq8W.s 			page 3


  91:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  92:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** void send_command(uint8_t command) {
  95:Core/Src/main.c ****   volatile HAL_StatusTypeDef status;
  96:Core/Src/main.c ****   DCX_low();
  97:Core/Src/main.c ****   status = HAL_SPI_Transmit(&hspi1, &command, 1, HAL_MAX_DELAY);
  98:Core/Src/main.c ****   DCX_high(); // im asnchluss kommen parmater
  99:Core/Src/main.c **** }
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** typedef union {
 102:Core/Src/main.c ****   uint16_t u16;
 103:Core/Src/main.c ****   uint8_t u8[2];
 104:Core/Src/main.c **** } RaCaParam;
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** void send_1byte_param(uint8_t param) {
 107:Core/Src/main.c ****   volatile HAL_StatusTypeDef status;
 108:Core/Src/main.c ****   status = HAL_SPI_Transmit(&hspi1, &param, 1, HAL_MAX_DELAY);
 109:Core/Src/main.c **** }
 110:Core/Src/main.c **** void send_RaCa_set_param(RaCaParam start, RaCaParam end) {
 111:Core/Src/main.c ****   // Achtung ST7735S arbeitet in big endian während mcu in little endian
 112:Core/Src/main.c ****   // arbeitet, deswegen der tusch mittels union!
 113:Core/Src/main.c ****   volatile HAL_StatusTypeDef status;
 114:Core/Src/main.c ****   uint8_t parameter[2];
 115:Core/Src/main.c ****   parameter[0] = start.u8[1];
 116:Core/Src/main.c ****   parameter[1] = start.u8[0];
 117:Core/Src/main.c ****   status = HAL_SPI_Transmit(&hspi1, parameter, 2, HAL_MAX_DELAY);
 118:Core/Src/main.c ****   parameter[0] = end.u8[1];
 119:Core/Src/main.c ****   parameter[1] = end.u8[0];
 120:Core/Src/main.c ****   status = HAL_SPI_Transmit(&hspi1, parameter, 2, HAL_MAX_DELAY);
 121:Core/Src/main.c **** }
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** uint32_t drawPixle(uint16_t color) {
 124:Core/Src/main.c ****   uint32_t i;
 125:Core/Src/main.c ****   uint32_t pixel = 132 * 162;
 126:Core/Src/main.c ****   // Pixeldata senden (2 Bytes, Big Endian!)
 127:Core/Src/main.c ****   uint8_t data[] = {color >> 8, color & 0xFF};
 128:Core/Src/main.c ****   for (i = 0; i < pixel; i++) {
 129:Core/Src/main.c ****     HAL_SPI_Transmit(&hspi1, data, 2, HAL_MAX_DELAY);
 130:Core/Src/main.c ****   }
 131:Core/Src/main.c ****   return i;
 132:Core/Src/main.c **** }
 133:Core/Src/main.c **** /* USER CODE END 0 */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /**
 136:Core/Src/main.c ****  * @brief  The application entry point.
 137:Core/Src/main.c ****  * @retval int
 138:Core/Src/main.c ****  */
 139:Core/Src/main.c **** int main(void) {
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* USER CODE END 1 */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick.
ARM GAS  /tmp/cck5xq8W.s 			page 4


 148:Core/Src/main.c ****    */
 149:Core/Src/main.c ****   HAL_Init();
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /* USER CODE END Init */
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   /* Configure the system clock */
 156:Core/Src/main.c ****   SystemClock_Config();
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* USER CODE END SysInit */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* Initialize all configured peripherals */
 163:Core/Src/main.c ****   MX_GPIO_Init();
 164:Core/Src/main.c ****   MX_SPI1_Init();
 165:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /* USER CODE END 2 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* Infinite loop */
 170:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 171:Core/Src/main.c ****   CSX_low();
 172:Core/Src/main.c ****   send_command(SLEEP_OUT); // 0x11
 173:Core/Src/main.c ****   HAL_Delay(200);          // warten bis Controller aufwacht
 174:Core/Src/main.c ****   // HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4) == GPIO_PIN_RESET
 175:Core/Src/main.c ****   //     ? HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_SET)
 176:Core/Src/main.c ****   //     : HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_RESET);
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   send_command(MADCTL_CMD);
 179:Core/Src/main.c ****   send_1byte_param(MADCTL_PARAM);
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   send_command(RASET_CMD);
 182:Core/Src/main.c ****   volatile RaCaParam ra_start;
 183:Core/Src/main.c ****   ra_start.u16 = RASET_PARAM_START;
 184:Core/Src/main.c ****   volatile RaCaParam ra_end;
 185:Core/Src/main.c ****   ra_end.u16 = RASET_PARAM_END;
 186:Core/Src/main.c ****   send_RaCa_set_param(ra_start, ra_end);
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   send_command(CASET_CMD);
 189:Core/Src/main.c ****   volatile RaCaParam ca_start;
 190:Core/Src/main.c ****   ca_start.u16 = CASET_PARAM_START;
 191:Core/Src/main.c ****   volatile RaCaParam ca_end;
 192:Core/Src/main.c ****   ca_end.u16 = CASET_PARAM_END;
 193:Core/Src/main.c ****   send_RaCa_set_param(ca_start, ca_end);
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   send_command(COLMOD_CMD);
 196:Core/Src/main.c ****   send_1byte_param(COLMOD_16);
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   send_command(DISPLAY_ON); // 0x29
 199:Core/Src/main.c ****   HAL_Delay(20);            // Warten bis display iengeschlatet ist
 200:Core/Src/main.c ****   CSX_high();
 201:Core/Src/main.c ****   // Hardware-Reset zu Beginn
 202:Core/Src/main.c ****   // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
 203:Core/Src/main.c ****   // HAL_Delay(50);
 204:Core/Src/main.c ****   // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_SET);
ARM GAS  /tmp/cck5xq8W.s 			page 5


 205:Core/Src/main.c ****   // HAL_Delay(1000);
 206:Core/Src/main.c ****   // uint16_t colors[3] = {GREEN, BLUE, RED};
 207:Core/Src/main.c ****   // uint8_t index = 0;
 208:Core/Src/main.c ****   // GPIO_PinState buttonstatus;
 209:Core/Src/main.c ****   while (1) {
 210:Core/Src/main.c ****     // buttonstatus = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 211:Core/Src/main.c ****     // HAL_Delay(50);
 212:Core/Src/main.c ****     // if (buttonstatus == GPIO_PIN_SET) {
 213:Core/Src/main.c ****     //   buttonstatus = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 214:Core/Src/main.c ****     //   if (buttonstatus == GPIO_PIN_SET) {
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****     // CSX_low();
 217:Core/Src/main.c ****     // send_command(SLEEP_OUT); // 0x11
 218:Core/Src/main.c ****     // HAL_Delay(120);          // warten bis Controller aufwacht
 219:Core/Src/main.c ****     // // HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4) == GPIO_PIN_RESET
 220:Core/Src/main.c ****     // //     ? HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_SET)
 221:Core/Src/main.c ****     // //     : HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_RESET);
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****     // send_command(MADCTL_CMD);
 224:Core/Src/main.c ****     // send_1byte_param(MADCTL_PARAM);
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****     // send_command(RASET_CMD);
 227:Core/Src/main.c ****     // volatile RaCaParam ra_start;
 228:Core/Src/main.c ****     // ra_start.u16 = RASET_PARAM_START;
 229:Core/Src/main.c ****     // volatile RaCaParam ra_end;
 230:Core/Src/main.c ****     // ra_end.u16 = RASET_PARAM_END;
 231:Core/Src/main.c ****     // send_RaCa_set_param(ra_start, ra_end);
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****     // send_command(CASET_CMD);
 234:Core/Src/main.c ****     // volatile RaCaParam ca_start;
 235:Core/Src/main.c ****     // ca_start.u16 = CASET_PARAM_START;
 236:Core/Src/main.c ****     // volatile RaCaParam ca_end;
 237:Core/Src/main.c ****     // ca_end.u16 = CASET_PARAM_END;
 238:Core/Src/main.c ****     // send_RaCa_set_param(ca_start, ca_end);
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****     // send_command(COLMOD_CMD);
 241:Core/Src/main.c ****     // send_1byte_param(COLMOD_16);
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****     // send_command(DISPLAY_ON); // 0x29
 244:Core/Src/main.c ****     // HAL_Delay(20);            // Warten bis display iengeschlatet ist
 245:Core/Src/main.c ****     CSX_low();
 246:Core/Src/main.c ****     send_command(RAMWR_CMD);
 247:Core/Src/main.c ****     // drawPixle(colors[index]);
 248:Core/Src/main.c ****     drawPixle(GREEN);
 249:Core/Src/main.c ****     CSX_high();
 250:Core/Src/main.c ****     HAL_Delay(5000);
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****     // while (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0) == GPIO_PIN_RESET) {
 253:Core/Src/main.c ****     //   HAL_Delay(50);
 254:Core/Src/main.c ****     // }
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****     // index++;
 257:Core/Src/main.c ****     // if (index == 3) {
 258:Core/Src/main.c ****     //   index = 0;
 259:Core/Src/main.c ****     // }
 260:Core/Src/main.c ****   }
 261:Core/Src/main.c **** 
ARM GAS  /tmp/cck5xq8W.s 			page 6


 262:Core/Src/main.c ****   /* USER CODE END WHILE */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /* USER CODE BEGIN 3 */
 265:Core/Src/main.c **** }
 266:Core/Src/main.c **** /* USER CODE END 3 */
 267:Core/Src/main.c **** // }
 268:Core/Src/main.c **** // }
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** /**
 271:Core/Src/main.c ****  * @brief System Clock Configuration
 272:Core/Src/main.c ****  * @retval None
 273:Core/Src/main.c ****  */
 274:Core/Src/main.c **** void SystemClock_Config(void) {
 275:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 276:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 279:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 280:Core/Src/main.c ****    */
 281:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 282:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 283:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 284:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 285:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 286:Core/Src/main.c ****     Error_Handler();
 287:Core/Src/main.c ****   }
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 290:Core/Src/main.c ****    */
 291:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 292:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 293:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 294:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 295:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 296:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK) {
 299:Core/Src/main.c ****     Error_Handler();
 300:Core/Src/main.c ****   }
 301:Core/Src/main.c **** }
 302:Core/Src/main.c **** 
 303:Core/Src/main.c **** /**
 304:Core/Src/main.c ****  * @brief SPI1 Initialization Function
 305:Core/Src/main.c ****  * @param None
 306:Core/Src/main.c ****  * @retval None
 307:Core/Src/main.c ****  */
 308:Core/Src/main.c **** static void MX_SPI1_Init(void) {
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 317:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 318:Core/Src/main.c ****   hspi1.Instance = SPI1;
ARM GAS  /tmp/cck5xq8W.s 			page 7


 319:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 320:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 321:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 322:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 323:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 324:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 325:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 326:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 327:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 328:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 329:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 330:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK) {
 331:Core/Src/main.c ****     Error_Handler();
 332:Core/Src/main.c ****   }
 333:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 336:Core/Src/main.c **** }
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** /**
 339:Core/Src/main.c ****  * @brief GPIO Initialization Function
 340:Core/Src/main.c ****  * @param None
 341:Core/Src/main.c ****  * @retval None
 342:Core/Src/main.c ****  */
 343:Core/Src/main.c **** static void MX_GPIO_Init(void) {
  26              		.loc 1 343 32 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 86B0     		sub	sp, sp, #24
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
 344:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 344 3 view .LVU1
  43              		.loc 1 344 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0294     		str	r4, [sp, #8]
  46 000a 0394     		str	r4, [sp, #12]
  47 000c 0494     		str	r4, [sp, #16]
  48 000e 0594     		str	r4, [sp, #20]
 345:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 350:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 350 3 is_stmt 1 view .LVU3
  50              	.LBB4:
ARM GAS  /tmp/cck5xq8W.s 			page 8


  51              		.loc 1 350 3 view .LVU4
  52              		.loc 1 350 3 view .LVU5
  53 0010 204B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 350 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F00402 		and	r2, r2, #4
  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 350 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 350 3 view .LVU8
 351:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  65              		.loc 1 351 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 351 3 view .LVU10
  68              		.loc 1 351 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F01002 		orr	r2, r2, #16
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 351 3 view .LVU12
  73 002c 9B69     		ldr	r3, [r3, #24]
  74 002e 03F01003 		and	r3, r3, #16
  75 0032 0193     		str	r3, [sp, #4]
  76              		.loc 1 351 3 view .LVU13
  77 0034 019B     		ldr	r3, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 351 3 view .LVU14
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 354:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1 | GPIO_PIN_3 | GPIO_PIN_4,
  80              		.loc 1 354 3 view .LVU15
  81 0036 184E     		ldr	r6, .L3+4
  82 0038 2246     		mov	r2, r4
  83 003a 1A21     		movs	r1, #26
  84 003c 3046     		mov	r0, r6
  85 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL0:
 355:Core/Src/main.c ****                     GPIO_PIN_RESET);
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 358:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_RESET);
  87              		.loc 1 358 3 view .LVU16
  88 0042 164F     		ldr	r7, .L3+8
  89 0044 2246     		mov	r2, r4
  90 0046 4FF40071 		mov	r1, #512
  91 004a 3846     		mov	r0, r7
  92 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
  93              	.LVL1:
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   /*Configure GPIO pin : PA0 */
 361:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
  94              		.loc 1 361 3 view .LVU17
  95              		.loc 1 361 23 is_stmt 0 view .LVU18
  96 0050 0125     		movs	r5, #1
ARM GAS  /tmp/cck5xq8W.s 			page 9


  97 0052 0295     		str	r5, [sp, #8]
 362:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  98              		.loc 1 362 3 is_stmt 1 view .LVU19
  99              		.loc 1 362 24 is_stmt 0 view .LVU20
 100 0054 0394     		str	r4, [sp, #12]
 363:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 101              		.loc 1 363 3 is_stmt 1 view .LVU21
 102              		.loc 1 363 24 is_stmt 0 view .LVU22
 103 0056 0494     		str	r4, [sp, #16]
 364:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 104              		.loc 1 364 3 is_stmt 1 view .LVU23
 105 0058 02A9     		add	r1, sp, #8
 106 005a 3046     		mov	r0, r6
 107 005c FFF7FEFF 		bl	HAL_GPIO_Init
 108              	.LVL2:
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /*Configure GPIO pins : PA1 PA3 PA4 */
 367:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1 | GPIO_PIN_3 | GPIO_PIN_4;
 109              		.loc 1 367 3 view .LVU24
 110              		.loc 1 367 23 is_stmt 0 view .LVU25
 111 0060 1A23     		movs	r3, #26
 112 0062 0293     		str	r3, [sp, #8]
 368:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 113              		.loc 1 368 3 is_stmt 1 view .LVU26
 114              		.loc 1 368 24 is_stmt 0 view .LVU27
 115 0064 0395     		str	r5, [sp, #12]
 369:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 116              		.loc 1 369 3 is_stmt 1 view .LVU28
 117              		.loc 1 369 24 is_stmt 0 view .LVU29
 118 0066 0494     		str	r4, [sp, #16]
 370:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 119              		.loc 1 370 3 is_stmt 1 view .LVU30
 120              		.loc 1 370 25 is_stmt 0 view .LVU31
 121 0068 4FF00208 		mov	r8, #2
 122 006c CDF81480 		str	r8, [sp, #20]
 371:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 123              		.loc 1 371 3 is_stmt 1 view .LVU32
 124 0070 02A9     		add	r1, sp, #8
 125 0072 3046     		mov	r0, r6
 126 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 127              	.LVL3:
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /*Configure GPIO pin : PC9 */
 374:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9;
 128              		.loc 1 374 3 view .LVU33
 129              		.loc 1 374 23 is_stmt 0 view .LVU34
 130 0078 4FF40073 		mov	r3, #512
 131 007c 0293     		str	r3, [sp, #8]
 375:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 132              		.loc 1 375 3 is_stmt 1 view .LVU35
 133              		.loc 1 375 24 is_stmt 0 view .LVU36
 134 007e 0395     		str	r5, [sp, #12]
 376:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 135              		.loc 1 376 3 is_stmt 1 view .LVU37
 136              		.loc 1 376 24 is_stmt 0 view .LVU38
 137 0080 0494     		str	r4, [sp, #16]
 377:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/cck5xq8W.s 			page 10


 138              		.loc 1 377 3 is_stmt 1 view .LVU39
 139              		.loc 1 377 25 is_stmt 0 view .LVU40
 140 0082 CDF81480 		str	r8, [sp, #20]
 378:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 141              		.loc 1 378 3 is_stmt 1 view .LVU41
 142 0086 02A9     		add	r1, sp, #8
 143 0088 3846     		mov	r0, r7
 144 008a FFF7FEFF 		bl	HAL_GPIO_Init
 145              	.LVL4:
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 383:Core/Src/main.c **** }
 146              		.loc 1 383 1 is_stmt 0 view .LVU42
 147 008e 06B0     		add	sp, sp, #24
 148              	.LCFI2:
 149              		.cfi_def_cfa_offset 24
 150              		@ sp needed
 151 0090 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 152              	.L4:
 153              		.align	2
 154              	.L3:
 155 0094 00100240 		.word	1073876992
 156 0098 00080140 		.word	1073809408
 157 009c 00100140 		.word	1073811456
 158              		.cfi_endproc
 159              	.LFE72:
 161              		.section	.text.send_command,"ax",%progbits
 162              		.align	1
 163              		.global	send_command
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	send_command:
 169              	.LVL5:
 170              	.LFB65:
  94:Core/Src/main.c ****   volatile HAL_StatusTypeDef status;
 171              		.loc 1 94 36 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 16
 174              		@ frame_needed = 0, uses_anonymous_args = 0
  94:Core/Src/main.c ****   volatile HAL_StatusTypeDef status;
 175              		.loc 1 94 36 is_stmt 0 view .LVU44
 176 0000 10B5     		push	{r4, lr}
 177              	.LCFI3:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 4, -8
 180              		.cfi_offset 14, -4
 181 0002 84B0     		sub	sp, sp, #16
 182              	.LCFI4:
 183              		.cfi_def_cfa_offset 24
 184 0004 8DF80700 		strb	r0, [sp, #7]
  95:Core/Src/main.c ****   DCX_low();
 185              		.loc 1 95 3 is_stmt 1 view .LVU45
  96:Core/Src/main.c ****   status = HAL_SPI_Transmit(&hspi1, &command, 1, HAL_MAX_DELAY);
 186              		.loc 1 96 3 view .LVU46
ARM GAS  /tmp/cck5xq8W.s 			page 11


 187 0008 0B4C     		ldr	r4, .L7
 188 000a 0022     		movs	r2, #0
 189 000c 0221     		movs	r1, #2
 190 000e 2046     		mov	r0, r4
 191              	.LVL6:
  96:Core/Src/main.c ****   status = HAL_SPI_Transmit(&hspi1, &command, 1, HAL_MAX_DELAY);
 192              		.loc 1 96 3 is_stmt 0 view .LVU47
 193 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 194              	.LVL7:
  97:Core/Src/main.c ****   DCX_high(); // im asnchluss kommen parmater
 195              		.loc 1 97 3 is_stmt 1 view .LVU48
  97:Core/Src/main.c ****   DCX_high(); // im asnchluss kommen parmater
 196              		.loc 1 97 12 is_stmt 0 view .LVU49
 197 0014 4FF0FF33 		mov	r3, #-1
 198 0018 0122     		movs	r2, #1
 199 001a 0DF10701 		add	r1, sp, #7
 200 001e 0748     		ldr	r0, .L7+4
 201 0020 FFF7FEFF 		bl	HAL_SPI_Transmit
 202              	.LVL8:
  97:Core/Src/main.c ****   DCX_high(); // im asnchluss kommen parmater
 203              		.loc 1 97 10 discriminator 1 view .LVU50
 204 0024 8DF80F00 		strb	r0, [sp, #15]
  98:Core/Src/main.c **** }
 205              		.loc 1 98 3 is_stmt 1 view .LVU51
 206 0028 0122     		movs	r2, #1
 207 002a 0221     		movs	r1, #2
 208 002c 2046     		mov	r0, r4
 209 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 210              	.LVL9:
  99:Core/Src/main.c **** 
 211              		.loc 1 99 1 is_stmt 0 view .LVU52
 212 0032 04B0     		add	sp, sp, #16
 213              	.LCFI5:
 214              		.cfi_def_cfa_offset 8
 215              		@ sp needed
 216 0034 10BD     		pop	{r4, pc}
 217              	.L8:
 218 0036 00BF     		.align	2
 219              	.L7:
 220 0038 00080140 		.word	1073809408
 221 003c 00000000 		.word	hspi1
 222              		.cfi_endproc
 223              	.LFE65:
 225              		.section	.text.send_1byte_param,"ax",%progbits
 226              		.align	1
 227              		.global	send_1byte_param
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 232              	send_1byte_param:
 233              	.LVL10:
 234              	.LFB66:
 106:Core/Src/main.c ****   volatile HAL_StatusTypeDef status;
 235              		.loc 1 106 38 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 16
 238              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cck5xq8W.s 			page 12


 106:Core/Src/main.c ****   volatile HAL_StatusTypeDef status;
 239              		.loc 1 106 38 is_stmt 0 view .LVU54
 240 0000 00B5     		push	{lr}
 241              	.LCFI6:
 242              		.cfi_def_cfa_offset 4
 243              		.cfi_offset 14, -4
 244 0002 85B0     		sub	sp, sp, #20
 245              	.LCFI7:
 246              		.cfi_def_cfa_offset 24
 247 0004 8DF80700 		strb	r0, [sp, #7]
 107:Core/Src/main.c ****   status = HAL_SPI_Transmit(&hspi1, &param, 1, HAL_MAX_DELAY);
 248              		.loc 1 107 3 is_stmt 1 view .LVU55
 108:Core/Src/main.c **** }
 249              		.loc 1 108 3 view .LVU56
 108:Core/Src/main.c **** }
 250              		.loc 1 108 12 is_stmt 0 view .LVU57
 251 0008 4FF0FF33 		mov	r3, #-1
 252 000c 0122     		movs	r2, #1
 253 000e 0DF10701 		add	r1, sp, #7
 254 0012 0448     		ldr	r0, .L11
 255              	.LVL11:
 108:Core/Src/main.c **** }
 256              		.loc 1 108 12 view .LVU58
 257 0014 FFF7FEFF 		bl	HAL_SPI_Transmit
 258              	.LVL12:
 108:Core/Src/main.c **** }
 259              		.loc 1 108 10 discriminator 1 view .LVU59
 260 0018 8DF80F00 		strb	r0, [sp, #15]
 109:Core/Src/main.c **** void send_RaCa_set_param(RaCaParam start, RaCaParam end) {
 261              		.loc 1 109 1 view .LVU60
 262 001c 05B0     		add	sp, sp, #20
 263              	.LCFI8:
 264              		.cfi_def_cfa_offset 4
 265              		@ sp needed
 266 001e 5DF804FB 		ldr	pc, [sp], #4
 267              	.L12:
 268 0022 00BF     		.align	2
 269              	.L11:
 270 0024 00000000 		.word	hspi1
 271              		.cfi_endproc
 272              	.LFE66:
 274              		.section	.text.send_RaCa_set_param,"ax",%progbits
 275              		.align	1
 276              		.global	send_RaCa_set_param
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 281              	send_RaCa_set_param:
 282              	.LVL13:
 283              	.LFB67:
 110:Core/Src/main.c ****   // Achtung ST7735S arbeitet in big endian während mcu in little endian
 284              		.loc 1 110 58 is_stmt 1 view -0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 8
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 110:Core/Src/main.c ****   // Achtung ST7735S arbeitet in big endian während mcu in little endian
 288              		.loc 1 110 58 is_stmt 0 view .LVU62
ARM GAS  /tmp/cck5xq8W.s 			page 13


 289 0000 30B5     		push	{r4, r5, lr}
 290              	.LCFI9:
 291              		.cfi_def_cfa_offset 12
 292              		.cfi_offset 4, -12
 293              		.cfi_offset 5, -8
 294              		.cfi_offset 14, -4
 295 0002 83B0     		sub	sp, sp, #12
 296              	.LCFI10:
 297              		.cfi_def_cfa_offset 24
 298 0004 0C46     		mov	r4, r1	@ movhi
 299              	.LVL14:
 113:Core/Src/main.c ****   uint8_t parameter[2];
 300              		.loc 1 113 3 is_stmt 1 view .LVU63
 114:Core/Src/main.c ****   parameter[0] = start.u8[1];
 301              		.loc 1 114 3 view .LVU64
 115:Core/Src/main.c ****   parameter[1] = start.u8[0];
 302              		.loc 1 115 3 view .LVU65
 115:Core/Src/main.c ****   parameter[1] = start.u8[0];
 303              		.loc 1 115 26 is_stmt 0 view .LVU66
 304 0006 C0F30723 		ubfx	r3, r0, #8, #8
 115:Core/Src/main.c ****   parameter[1] = start.u8[0];
 305              		.loc 1 115 16 view .LVU67
 306 000a 8DF80430 		strb	r3, [sp, #4]
 116:Core/Src/main.c ****   status = HAL_SPI_Transmit(&hspi1, parameter, 2, HAL_MAX_DELAY);
 307              		.loc 1 116 3 is_stmt 1 view .LVU68
 116:Core/Src/main.c ****   status = HAL_SPI_Transmit(&hspi1, parameter, 2, HAL_MAX_DELAY);
 308              		.loc 1 116 16 is_stmt 0 view .LVU69
 309 000e 8DF80500 		strb	r0, [sp, #5]
 117:Core/Src/main.c ****   parameter[0] = end.u8[1];
 310              		.loc 1 117 3 is_stmt 1 view .LVU70
 117:Core/Src/main.c ****   parameter[0] = end.u8[1];
 311              		.loc 1 117 12 is_stmt 0 view .LVU71
 312 0012 0D4D     		ldr	r5, .L15
 313 0014 4FF0FF33 		mov	r3, #-1
 314 0018 0222     		movs	r2, #2
 315 001a 01A9     		add	r1, sp, #4
 316 001c 2846     		mov	r0, r5
 317              	.LVL15:
 117:Core/Src/main.c ****   parameter[0] = end.u8[1];
 318              		.loc 1 117 12 view .LVU72
 319 001e FFF7FEFF 		bl	HAL_SPI_Transmit
 320              	.LVL16:
 117:Core/Src/main.c ****   parameter[0] = end.u8[1];
 321              		.loc 1 117 10 discriminator 1 view .LVU73
 322 0022 8DF80700 		strb	r0, [sp, #7]
 118:Core/Src/main.c ****   parameter[1] = end.u8[0];
 323              		.loc 1 118 3 is_stmt 1 view .LVU74
 324              	.LVL17:
 118:Core/Src/main.c ****   parameter[1] = end.u8[0];
 325              		.loc 1 118 24 is_stmt 0 view .LVU75
 326 0026 C4F30723 		ubfx	r3, r4, #8, #8
 118:Core/Src/main.c ****   parameter[1] = end.u8[0];
 327              		.loc 1 118 16 view .LVU76
 328 002a 8DF80430 		strb	r3, [sp, #4]
 119:Core/Src/main.c ****   status = HAL_SPI_Transmit(&hspi1, parameter, 2, HAL_MAX_DELAY);
 329              		.loc 1 119 3 is_stmt 1 view .LVU77
 119:Core/Src/main.c ****   status = HAL_SPI_Transmit(&hspi1, parameter, 2, HAL_MAX_DELAY);
ARM GAS  /tmp/cck5xq8W.s 			page 14


 330              		.loc 1 119 16 is_stmt 0 view .LVU78
 331 002e 8DF80540 		strb	r4, [sp, #5]
 120:Core/Src/main.c **** }
 332              		.loc 1 120 3 is_stmt 1 view .LVU79
 120:Core/Src/main.c **** }
 333              		.loc 1 120 12 is_stmt 0 view .LVU80
 334 0032 4FF0FF33 		mov	r3, #-1
 335 0036 0222     		movs	r2, #2
 336 0038 01A9     		add	r1, sp, #4
 337 003a 2846     		mov	r0, r5
 338 003c FFF7FEFF 		bl	HAL_SPI_Transmit
 339              	.LVL18:
 120:Core/Src/main.c **** }
 340              		.loc 1 120 10 discriminator 1 view .LVU81
 341 0040 8DF80700 		strb	r0, [sp, #7]
 121:Core/Src/main.c **** 
 342              		.loc 1 121 1 view .LVU82
 343 0044 03B0     		add	sp, sp, #12
 344              	.LCFI11:
 345              		.cfi_def_cfa_offset 12
 346              		@ sp needed
 347 0046 30BD     		pop	{r4, r5, pc}
 348              	.LVL19:
 349              	.L16:
 121:Core/Src/main.c **** 
 350              		.loc 1 121 1 view .LVU83
 351              		.align	2
 352              	.L15:
 353 0048 00000000 		.word	hspi1
 354              		.cfi_endproc
 355              	.LFE67:
 357              		.section	.text.drawPixle,"ax",%progbits
 358              		.align	1
 359              		.global	drawPixle
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 364              	drawPixle:
 365              	.LVL20:
 366              	.LFB68:
 123:Core/Src/main.c ****   uint32_t i;
 367              		.loc 1 123 36 is_stmt 1 view -0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 8
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 123:Core/Src/main.c ****   uint32_t i;
 371              		.loc 1 123 36 is_stmt 0 view .LVU85
 372 0000 10B5     		push	{r4, lr}
 373              	.LCFI12:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 4, -8
 376              		.cfi_offset 14, -4
 377 0002 82B0     		sub	sp, sp, #8
 378              	.LCFI13:
 379              		.cfi_def_cfa_offset 16
 124:Core/Src/main.c ****   uint32_t pixel = 132 * 162;
 380              		.loc 1 124 3 is_stmt 1 view .LVU86
ARM GAS  /tmp/cck5xq8W.s 			page 15


 125:Core/Src/main.c ****   // Pixeldata senden (2 Bytes, Big Endian!)
 381              		.loc 1 125 3 view .LVU87
 382              	.LVL21:
 127:Core/Src/main.c ****   for (i = 0; i < pixel; i++) {
 383              		.loc 1 127 3 view .LVU88
 127:Core/Src/main.c ****   for (i = 0; i < pixel; i++) {
 384              		.loc 1 127 11 is_stmt 0 view .LVU89
 385 0004 030A     		lsrs	r3, r0, #8
 386 0006 8DF80430 		strb	r3, [sp, #4]
 387 000a 8DF80500 		strb	r0, [sp, #5]
 128:Core/Src/main.c ****     HAL_SPI_Transmit(&hspi1, data, 2, HAL_MAX_DELAY);
 388              		.loc 1 128 3 is_stmt 1 view .LVU90
 389              	.LVL22:
 128:Core/Src/main.c ****     HAL_SPI_Transmit(&hspi1, data, 2, HAL_MAX_DELAY);
 390              		.loc 1 128 10 is_stmt 0 view .LVU91
 391 000e 0024     		movs	r4, #0
 128:Core/Src/main.c ****     HAL_SPI_Transmit(&hspi1, data, 2, HAL_MAX_DELAY);
 392              		.loc 1 128 3 view .LVU92
 393 0010 07E0     		b	.L18
 394              	.LVL23:
 395              	.L19:
 129:Core/Src/main.c ****   }
 396              		.loc 1 129 5 is_stmt 1 view .LVU93
 397 0012 4FF0FF33 		mov	r3, #-1
 398 0016 0222     		movs	r2, #2
 399 0018 01A9     		add	r1, sp, #4
 400 001a 0548     		ldr	r0, .L21
 401 001c FFF7FEFF 		bl	HAL_SPI_Transmit
 402              	.LVL24:
 128:Core/Src/main.c ****     HAL_SPI_Transmit(&hspi1, data, 2, HAL_MAX_DELAY);
 403              		.loc 1 128 27 discriminator 3 view .LVU94
 404 0020 0134     		adds	r4, r4, #1
 405              	.LVL25:
 406              	.L18:
 128:Core/Src/main.c ****     HAL_SPI_Transmit(&hspi1, data, 2, HAL_MAX_DELAY);
 407              		.loc 1 128 17 discriminator 1 view .LVU95
 408 0022 45F28733 		movw	r3, #21383
 409 0026 9C42     		cmp	r4, r3
 410 0028 F3D9     		bls	.L19
 131:Core/Src/main.c **** }
 411              		.loc 1 131 3 view .LVU96
 132:Core/Src/main.c **** /* USER CODE END 0 */
 412              		.loc 1 132 1 is_stmt 0 view .LVU97
 413 002a 2046     		mov	r0, r4
 414 002c 02B0     		add	sp, sp, #8
 415              	.LCFI14:
 416              		.cfi_def_cfa_offset 8
 417              		@ sp needed
 418 002e 10BD     		pop	{r4, pc}
 419              	.LVL26:
 420              	.L22:
 132:Core/Src/main.c **** /* USER CODE END 0 */
 421              		.loc 1 132 1 view .LVU98
 422              		.align	2
 423              	.L21:
 424 0030 00000000 		.word	hspi1
 425              		.cfi_endproc
ARM GAS  /tmp/cck5xq8W.s 			page 16


 426              	.LFE68:
 428              		.section	.text.Error_Handler,"ax",%progbits
 429              		.align	1
 430              		.global	Error_Handler
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 435              	Error_Handler:
 436              	.LFB73:
 384:Core/Src/main.c **** 
 385:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 386:Core/Src/main.c **** 
 387:Core/Src/main.c **** /* USER CODE END 4 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** /**
 390:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 391:Core/Src/main.c ****  * @retval None
 392:Core/Src/main.c ****  */
 393:Core/Src/main.c **** void Error_Handler(void) {
 437              		.loc 1 393 26 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ Volatile: function does not return.
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 394:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 395:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state
 396:Core/Src/main.c ****    */
 397:Core/Src/main.c ****   __disable_irq();
 443              		.loc 1 397 3 view .LVU100
 444              	.LBB6:
 445              	.LBI6:
 446              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cck5xq8W.s 			page 17


  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/cck5xq8W.s 			page 18


  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  /tmp/cck5xq8W.s 			page 19


 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 447              		.loc 2 140 27 view .LVU101
 448              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 449              		.loc 2 142 3 view .LVU102
 450              		.syntax unified
 451              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 452 0000 72B6     		cpsid i
 453              	@ 0 "" 2
 454              		.thumb
 455              		.syntax unified
 456              	.L24:
 457              	.LBE7:
 458              	.LBE6:
 398:Core/Src/main.c ****   while (1) {
 459              		.loc 1 398 3 view .LVU103
 399:Core/Src/main.c ****   }
 460              		.loc 1 399 3 view .LVU104
 398:Core/Src/main.c ****   while (1) {
 461              		.loc 1 398 9 view .LVU105
 462 0002 FEE7     		b	.L24
 463              		.cfi_endproc
 464              	.LFE73:
 466              		.section	.text.MX_SPI1_Init,"ax",%progbits
 467              		.align	1
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 472              	MX_SPI1_Init:
 473              	.LFB71:
 308:Core/Src/main.c **** 
 474              		.loc 1 308 32 view -0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478 0000 08B5     		push	{r3, lr}
 479              	.LCFI15:
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 3, -8
 482              		.cfi_offset 14, -4
 318:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 483              		.loc 1 318 3 view .LVU107
 318:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 484              		.loc 1 318 18 is_stmt 0 view .LVU108
 485 0002 0D48     		ldr	r0, .L29
 486 0004 0D4B     		ldr	r3, .L29+4
 487 0006 0360     		str	r3, [r0]
 319:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 488              		.loc 1 319 3 is_stmt 1 view .LVU109
 319:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 489              		.loc 1 319 19 is_stmt 0 view .LVU110
 490 0008 4FF48273 		mov	r3, #260
 491 000c 4360     		str	r3, [r0, #4]
 320:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 492              		.loc 1 320 3 is_stmt 1 view .LVU111
ARM GAS  /tmp/cck5xq8W.s 			page 20


 320:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 493              		.loc 1 320 24 is_stmt 0 view .LVU112
 494 000e 0023     		movs	r3, #0
 495 0010 8360     		str	r3, [r0, #8]
 321:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 496              		.loc 1 321 3 is_stmt 1 view .LVU113
 321:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 497              		.loc 1 321 23 is_stmt 0 view .LVU114
 498 0012 C360     		str	r3, [r0, #12]
 322:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 499              		.loc 1 322 3 is_stmt 1 view .LVU115
 322:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 500              		.loc 1 322 26 is_stmt 0 view .LVU116
 501 0014 0361     		str	r3, [r0, #16]
 323:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 502              		.loc 1 323 3 is_stmt 1 view .LVU117
 323:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 503              		.loc 1 323 23 is_stmt 0 view .LVU118
 504 0016 4361     		str	r3, [r0, #20]
 324:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 505              		.loc 1 324 3 is_stmt 1 view .LVU119
 324:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 506              		.loc 1 324 18 is_stmt 0 view .LVU120
 507 0018 4FF40072 		mov	r2, #512
 508 001c 8261     		str	r2, [r0, #24]
 325:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 509              		.loc 1 325 3 is_stmt 1 view .LVU121
 325:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 510              		.loc 1 325 32 is_stmt 0 view .LVU122
 511 001e C361     		str	r3, [r0, #28]
 326:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 512              		.loc 1 326 3 is_stmt 1 view .LVU123
 326:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 513              		.loc 1 326 23 is_stmt 0 view .LVU124
 514 0020 0362     		str	r3, [r0, #32]
 327:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 515              		.loc 1 327 3 is_stmt 1 view .LVU125
 327:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 516              		.loc 1 327 21 is_stmt 0 view .LVU126
 517 0022 4362     		str	r3, [r0, #36]
 328:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 518              		.loc 1 328 3 is_stmt 1 view .LVU127
 328:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 519              		.loc 1 328 29 is_stmt 0 view .LVU128
 520 0024 8362     		str	r3, [r0, #40]
 329:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK) {
 521              		.loc 1 329 3 is_stmt 1 view .LVU129
 329:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK) {
 522              		.loc 1 329 28 is_stmt 0 view .LVU130
 523 0026 0A23     		movs	r3, #10
 524 0028 C362     		str	r3, [r0, #44]
 330:Core/Src/main.c ****     Error_Handler();
 525              		.loc 1 330 3 is_stmt 1 view .LVU131
 330:Core/Src/main.c ****     Error_Handler();
 526              		.loc 1 330 7 is_stmt 0 view .LVU132
 527 002a FFF7FEFF 		bl	HAL_SPI_Init
 528              	.LVL27:
ARM GAS  /tmp/cck5xq8W.s 			page 21


 330:Core/Src/main.c ****     Error_Handler();
 529              		.loc 1 330 6 discriminator 1 view .LVU133
 530 002e 00B9     		cbnz	r0, .L28
 336:Core/Src/main.c **** 
 531              		.loc 1 336 1 view .LVU134
 532 0030 08BD     		pop	{r3, pc}
 533              	.L28:
 331:Core/Src/main.c ****   }
 534              		.loc 1 331 5 is_stmt 1 view .LVU135
 535 0032 FFF7FEFF 		bl	Error_Handler
 536              	.LVL28:
 537              	.L30:
 538 0036 00BF     		.align	2
 539              	.L29:
 540 0038 00000000 		.word	hspi1
 541 003c 00300140 		.word	1073819648
 542              		.cfi_endproc
 543              	.LFE71:
 545              		.section	.text.SystemClock_Config,"ax",%progbits
 546              		.align	1
 547              		.global	SystemClock_Config
 548              		.syntax unified
 549              		.thumb
 550              		.thumb_func
 552              	SystemClock_Config:
 553              	.LFB70:
 274:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 554              		.loc 1 274 31 view -0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 64
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558 0000 00B5     		push	{lr}
 559              	.LCFI16:
 560              		.cfi_def_cfa_offset 4
 561              		.cfi_offset 14, -4
 562 0002 91B0     		sub	sp, sp, #68
 563              	.LCFI17:
 564              		.cfi_def_cfa_offset 72
 275:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 565              		.loc 1 275 3 view .LVU137
 275:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 566              		.loc 1 275 22 is_stmt 0 view .LVU138
 567 0004 2822     		movs	r2, #40
 568 0006 0021     		movs	r1, #0
 569 0008 06A8     		add	r0, sp, #24
 570 000a FFF7FEFF 		bl	memset
 571              	.LVL29:
 276:Core/Src/main.c **** 
 572              		.loc 1 276 3 is_stmt 1 view .LVU139
 276:Core/Src/main.c **** 
 573              		.loc 1 276 22 is_stmt 0 view .LVU140
 574 000e 0023     		movs	r3, #0
 575 0010 0193     		str	r3, [sp, #4]
 576 0012 0293     		str	r3, [sp, #8]
 577 0014 0393     		str	r3, [sp, #12]
 578 0016 0493     		str	r3, [sp, #16]
 579 0018 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/cck5xq8W.s 			page 22


 281:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 580              		.loc 1 281 3 is_stmt 1 view .LVU141
 281:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 581              		.loc 1 281 36 is_stmt 0 view .LVU142
 582 001a 0223     		movs	r3, #2
 583 001c 0693     		str	r3, [sp, #24]
 282:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 584              		.loc 1 282 3 is_stmt 1 view .LVU143
 282:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 585              		.loc 1 282 30 is_stmt 0 view .LVU144
 586 001e 0123     		movs	r3, #1
 587 0020 0A93     		str	r3, [sp, #40]
 283:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 588              		.loc 1 283 3 is_stmt 1 view .LVU145
 283:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 589              		.loc 1 283 41 is_stmt 0 view .LVU146
 590 0022 1023     		movs	r3, #16
 591 0024 0B93     		str	r3, [sp, #44]
 284:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 592              		.loc 1 284 3 is_stmt 1 view .LVU147
 285:Core/Src/main.c ****     Error_Handler();
 593              		.loc 1 285 3 view .LVU148
 285:Core/Src/main.c ****     Error_Handler();
 594              		.loc 1 285 7 is_stmt 0 view .LVU149
 595 0026 06A8     		add	r0, sp, #24
 596 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 597              	.LVL30:
 285:Core/Src/main.c ****     Error_Handler();
 598              		.loc 1 285 6 discriminator 1 view .LVU150
 599 002c 68B9     		cbnz	r0, .L35
 291:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 600              		.loc 1 291 3 is_stmt 1 view .LVU151
 291:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 601              		.loc 1 291 31 is_stmt 0 view .LVU152
 602 002e 0F23     		movs	r3, #15
 603 0030 0193     		str	r3, [sp, #4]
 293:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 604              		.loc 1 293 3 is_stmt 1 view .LVU153
 293:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 605              		.loc 1 293 34 is_stmt 0 view .LVU154
 606 0032 0021     		movs	r1, #0
 607 0034 0291     		str	r1, [sp, #8]
 294:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 608              		.loc 1 294 3 is_stmt 1 view .LVU155
 294:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 609              		.loc 1 294 35 is_stmt 0 view .LVU156
 610 0036 0391     		str	r1, [sp, #12]
 295:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 611              		.loc 1 295 3 is_stmt 1 view .LVU157
 295:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 612              		.loc 1 295 36 is_stmt 0 view .LVU158
 613 0038 0491     		str	r1, [sp, #16]
 296:Core/Src/main.c **** 
 614              		.loc 1 296 3 is_stmt 1 view .LVU159
 296:Core/Src/main.c **** 
 615              		.loc 1 296 36 is_stmt 0 view .LVU160
 616 003a 0591     		str	r1, [sp, #20]
ARM GAS  /tmp/cck5xq8W.s 			page 23


 298:Core/Src/main.c ****     Error_Handler();
 617              		.loc 1 298 3 is_stmt 1 view .LVU161
 298:Core/Src/main.c ****     Error_Handler();
 618              		.loc 1 298 7 is_stmt 0 view .LVU162
 619 003c 01A8     		add	r0, sp, #4
 620 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 621              	.LVL31:
 298:Core/Src/main.c ****     Error_Handler();
 622              		.loc 1 298 6 discriminator 1 view .LVU163
 623 0042 20B9     		cbnz	r0, .L36
 301:Core/Src/main.c **** 
 624              		.loc 1 301 1 view .LVU164
 625 0044 11B0     		add	sp, sp, #68
 626              	.LCFI18:
 627              		.cfi_remember_state
 628              		.cfi_def_cfa_offset 4
 629              		@ sp needed
 630 0046 5DF804FB 		ldr	pc, [sp], #4
 631              	.L35:
 632              	.LCFI19:
 633              		.cfi_restore_state
 286:Core/Src/main.c ****   }
 634              		.loc 1 286 5 is_stmt 1 view .LVU165
 635 004a FFF7FEFF 		bl	Error_Handler
 636              	.LVL32:
 637              	.L36:
 299:Core/Src/main.c ****   }
 638              		.loc 1 299 5 view .LVU166
 639 004e FFF7FEFF 		bl	Error_Handler
 640              	.LVL33:
 641              		.cfi_endproc
 642              	.LFE70:
 644              		.section	.text.main,"ax",%progbits
 645              		.align	1
 646              		.global	main
 647              		.syntax unified
 648              		.thumb
 649              		.thumb_func
 651              	main:
 652              	.LFB69:
 139:Core/Src/main.c **** 
 653              		.loc 1 139 16 view -0
 654              		.cfi_startproc
 655              		@ Volatile: function does not return.
 656              		@ args = 0, pretend = 0, frame = 16
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658 0000 00B5     		push	{lr}
 659              	.LCFI20:
 660              		.cfi_def_cfa_offset 4
 661              		.cfi_offset 14, -4
 662 0002 85B0     		sub	sp, sp, #20
 663              	.LCFI21:
 664              		.cfi_def_cfa_offset 24
 149:Core/Src/main.c **** 
 665              		.loc 1 149 3 view .LVU168
 666 0004 FFF7FEFF 		bl	HAL_Init
 667              	.LVL34:
ARM GAS  /tmp/cck5xq8W.s 			page 24


 156:Core/Src/main.c **** 
 668              		.loc 1 156 3 view .LVU169
 669 0008 FFF7FEFF 		bl	SystemClock_Config
 670              	.LVL35:
 163:Core/Src/main.c ****   MX_SPI1_Init();
 671              		.loc 1 163 3 view .LVU170
 672 000c FFF7FEFF 		bl	MX_GPIO_Init
 673              	.LVL36:
 164:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 674              		.loc 1 164 3 view .LVU171
 675 0010 FFF7FEFF 		bl	MX_SPI1_Init
 676              	.LVL37:
 171:Core/Src/main.c ****   send_command(SLEEP_OUT); // 0x11
 677              		.loc 1 171 3 view .LVU172
 678 0014 2B4C     		ldr	r4, .L40
 679 0016 0022     		movs	r2, #0
 680 0018 1021     		movs	r1, #16
 681 001a 2046     		mov	r0, r4
 682 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 683              	.LVL38:
 172:Core/Src/main.c ****   HAL_Delay(200);          // warten bis Controller aufwacht
 684              		.loc 1 172 3 view .LVU173
 685 0020 1120     		movs	r0, #17
 686 0022 FFF7FEFF 		bl	send_command
 687              	.LVL39:
 173:Core/Src/main.c ****   // HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4) == GPIO_PIN_RESET
 688              		.loc 1 173 3 view .LVU174
 689 0026 C820     		movs	r0, #200
 690 0028 FFF7FEFF 		bl	HAL_Delay
 691              	.LVL40:
 178:Core/Src/main.c ****   send_1byte_param(MADCTL_PARAM);
 692              		.loc 1 178 3 view .LVU175
 693 002c 3620     		movs	r0, #54
 694 002e FFF7FEFF 		bl	send_command
 695              	.LVL41:
 179:Core/Src/main.c **** 
 696              		.loc 1 179 3 view .LVU176
 697 0032 0020     		movs	r0, #0
 698 0034 FFF7FEFF 		bl	send_1byte_param
 699              	.LVL42:
 181:Core/Src/main.c ****   volatile RaCaParam ra_start;
 700              		.loc 1 181 3 view .LVU177
 701 0038 2B20     		movs	r0, #43
 702 003a FFF7FEFF 		bl	send_command
 703              	.LVL43:
 182:Core/Src/main.c ****   ra_start.u16 = RASET_PARAM_START;
 704              		.loc 1 182 3 view .LVU178
 183:Core/Src/main.c ****   volatile RaCaParam ra_end;
 705              		.loc 1 183 3 view .LVU179
 183:Core/Src/main.c ****   volatile RaCaParam ra_end;
 706              		.loc 1 183 16 is_stmt 0 view .LVU180
 707 003e 0025     		movs	r5, #0
 708 0040 ADF80C50 		strh	r5, [sp, #12]	@ movhi
 184:Core/Src/main.c ****   ra_end.u16 = RASET_PARAM_END;
 709              		.loc 1 184 3 is_stmt 1 view .LVU181
 185:Core/Src/main.c ****   send_RaCa_set_param(ra_start, ra_end);
 710              		.loc 1 185 3 view .LVU182
ARM GAS  /tmp/cck5xq8W.s 			page 25


 185:Core/Src/main.c ****   send_RaCa_set_param(ra_start, ra_end);
 711              		.loc 1 185 14 is_stmt 0 view .LVU183
 712 0044 8323     		movs	r3, #131
 713 0046 ADF80830 		strh	r3, [sp, #8]	@ movhi
 186:Core/Src/main.c **** 
 714              		.loc 1 186 3 is_stmt 1 view .LVU184
 715 004a BDF80810 		ldrh	r1, [sp, #8]
 716 004e BDF80C00 		ldrh	r0, [sp, #12]
 717 0052 FFF7FEFF 		bl	send_RaCa_set_param
 718              	.LVL44:
 188:Core/Src/main.c ****   volatile RaCaParam ca_start;
 719              		.loc 1 188 3 view .LVU185
 720 0056 2A20     		movs	r0, #42
 721 0058 FFF7FEFF 		bl	send_command
 722              	.LVL45:
 189:Core/Src/main.c ****   ca_start.u16 = CASET_PARAM_START;
 723              		.loc 1 189 3 view .LVU186
 190:Core/Src/main.c ****   volatile RaCaParam ca_end;
 724              		.loc 1 190 3 view .LVU187
 190:Core/Src/main.c ****   volatile RaCaParam ca_end;
 725              		.loc 1 190 16 is_stmt 0 view .LVU188
 726 005c ADF80450 		strh	r5, [sp, #4]	@ movhi
 191:Core/Src/main.c ****   ca_end.u16 = CASET_PARAM_END;
 727              		.loc 1 191 3 is_stmt 1 view .LVU189
 192:Core/Src/main.c ****   send_RaCa_set_param(ca_start, ca_end);
 728              		.loc 1 192 3 view .LVU190
 192:Core/Src/main.c ****   send_RaCa_set_param(ca_start, ca_end);
 729              		.loc 1 192 14 is_stmt 0 view .LVU191
 730 0060 A123     		movs	r3, #161
 731 0062 ADF80030 		strh	r3, [sp]	@ movhi
 193:Core/Src/main.c **** 
 732              		.loc 1 193 3 is_stmt 1 view .LVU192
 733 0066 BDF80010 		ldrh	r1, [sp]
 734 006a BDF80400 		ldrh	r0, [sp, #4]
 735 006e FFF7FEFF 		bl	send_RaCa_set_param
 736              	.LVL46:
 195:Core/Src/main.c ****   send_1byte_param(COLMOD_16);
 737              		.loc 1 195 3 view .LVU193
 738 0072 3A20     		movs	r0, #58
 739 0074 FFF7FEFF 		bl	send_command
 740              	.LVL47:
 196:Core/Src/main.c **** 
 741              		.loc 1 196 3 view .LVU194
 742 0078 5520     		movs	r0, #85
 743 007a FFF7FEFF 		bl	send_1byte_param
 744              	.LVL48:
 198:Core/Src/main.c ****   HAL_Delay(20);            // Warten bis display iengeschlatet ist
 745              		.loc 1 198 3 view .LVU195
 746 007e 2920     		movs	r0, #41
 747 0080 FFF7FEFF 		bl	send_command
 748              	.LVL49:
 199:Core/Src/main.c ****   CSX_high();
 749              		.loc 1 199 3 view .LVU196
 750 0084 1420     		movs	r0, #20
 751 0086 FFF7FEFF 		bl	HAL_Delay
 752              	.LVL50:
 200:Core/Src/main.c ****   // Hardware-Reset zu Beginn
ARM GAS  /tmp/cck5xq8W.s 			page 26


 753              		.loc 1 200 3 view .LVU197
 754 008a 0122     		movs	r2, #1
 755 008c 1021     		movs	r1, #16
 756 008e 2046     		mov	r0, r4
 757 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 758              	.LVL51:
 759              	.L38:
 209:Core/Src/main.c ****     // buttonstatus = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 760              		.loc 1 209 3 view .LVU198
 245:Core/Src/main.c ****     send_command(RAMWR_CMD);
 761              		.loc 1 245 5 view .LVU199
 762 0094 0B4C     		ldr	r4, .L40
 763 0096 0022     		movs	r2, #0
 764 0098 1021     		movs	r1, #16
 765 009a 2046     		mov	r0, r4
 766 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 767              	.LVL52:
 246:Core/Src/main.c ****     // drawPixle(colors[index]);
 768              		.loc 1 246 5 view .LVU200
 769 00a0 2C20     		movs	r0, #44
 770 00a2 FFF7FEFF 		bl	send_command
 771              	.LVL53:
 248:Core/Src/main.c ****     CSX_high();
 772              		.loc 1 248 5 view .LVU201
 773 00a6 4FF4FC60 		mov	r0, #2016
 774 00aa FFF7FEFF 		bl	drawPixle
 775              	.LVL54:
 249:Core/Src/main.c ****     HAL_Delay(5000);
 776              		.loc 1 249 5 view .LVU202
 777 00ae 0122     		movs	r2, #1
 778 00b0 1021     		movs	r1, #16
 779 00b2 2046     		mov	r0, r4
 780 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 781              	.LVL55:
 250:Core/Src/main.c **** 
 782              		.loc 1 250 5 discriminator 1 view .LVU203
 783 00b8 41F28830 		movw	r0, #5000
 784 00bc FFF7FEFF 		bl	HAL_Delay
 785              	.LVL56:
 209:Core/Src/main.c ****     // buttonstatus = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
 786              		.loc 1 209 9 view .LVU204
 787 00c0 E8E7     		b	.L38
 788              	.L41:
 789 00c2 00BF     		.align	2
 790              	.L40:
 791 00c4 00080140 		.word	1073809408
 792              		.cfi_endproc
 793              	.LFE69:
 795              		.global	hspi1
 796              		.section	.bss.hspi1,"aw",%nobits
 797              		.align	2
 800              	hspi1:
 801 0000 00000000 		.space	88
 801      00000000 
 801      00000000 
 801      00000000 
 801      00000000 
ARM GAS  /tmp/cck5xq8W.s 			page 27


 802              		.text
 803              	.Letext0:
 804              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 805              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f100xb.h"
 806              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 807              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 808              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 809              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 810              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 811              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 812              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 813              		.file 12 "<built-in>"
ARM GAS  /tmp/cck5xq8W.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cck5xq8W.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/cck5xq8W.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/cck5xq8W.s:155    .text.MX_GPIO_Init:00000094 $d
     /tmp/cck5xq8W.s:162    .text.send_command:00000000 $t
     /tmp/cck5xq8W.s:168    .text.send_command:00000000 send_command
     /tmp/cck5xq8W.s:220    .text.send_command:00000038 $d
     /tmp/cck5xq8W.s:800    .bss.hspi1:00000000 hspi1
     /tmp/cck5xq8W.s:226    .text.send_1byte_param:00000000 $t
     /tmp/cck5xq8W.s:232    .text.send_1byte_param:00000000 send_1byte_param
     /tmp/cck5xq8W.s:270    .text.send_1byte_param:00000024 $d
     /tmp/cck5xq8W.s:275    .text.send_RaCa_set_param:00000000 $t
     /tmp/cck5xq8W.s:281    .text.send_RaCa_set_param:00000000 send_RaCa_set_param
     /tmp/cck5xq8W.s:353    .text.send_RaCa_set_param:00000048 $d
     /tmp/cck5xq8W.s:358    .text.drawPixle:00000000 $t
     /tmp/cck5xq8W.s:364    .text.drawPixle:00000000 drawPixle
     /tmp/cck5xq8W.s:424    .text.drawPixle:00000030 $d
     /tmp/cck5xq8W.s:429    .text.Error_Handler:00000000 $t
     /tmp/cck5xq8W.s:435    .text.Error_Handler:00000000 Error_Handler
     /tmp/cck5xq8W.s:467    .text.MX_SPI1_Init:00000000 $t
     /tmp/cck5xq8W.s:472    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
     /tmp/cck5xq8W.s:540    .text.MX_SPI1_Init:00000038 $d
     /tmp/cck5xq8W.s:546    .text.SystemClock_Config:00000000 $t
     /tmp/cck5xq8W.s:552    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/cck5xq8W.s:645    .text.main:00000000 $t
     /tmp/cck5xq8W.s:651    .text.main:00000000 main
     /tmp/cck5xq8W.s:791    .text.main:000000c4 $d
     /tmp/cck5xq8W.s:797    .bss.hspi1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Transmit
HAL_SPI_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
